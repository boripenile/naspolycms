<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:oxm="http://www.springframework.org/schema/oxm" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />


	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<!-- <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
		<beans:property name="prefix" value="/WEB-INF/views/" /> <beans:property 
		name="suffix" value=".jsp" /> </beans:bean> -->
	<context:component-scan base-package="cms.academic.academicapp.controller" />

	<!-- Tiles view resolver -->
	<beans:bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/defs/*.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

	<beans:bean id="javaMailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host" value="smtp.gmail.com" />
		<beans:property name="port" value="587" />
		<beans:property name="username" value="alitestaps@gmail.com" />
		<beans:property name="password" value="@SeconD2" />
		<!-- <beans:property name="username" value="boripe2000@gmail.com" />
		<beans:property name="password" value="Boripe_2233" /> -->
		<beans:property name="javaMailProperties">
			<beans:props>
				<beans:prop key="mail.smtp.auth">true</beans:prop>
				<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	<beans:bean id="simpleMailMessage" class="org.springframework.mail.SimpleMailMessage">
		<beans:property name="from" value="testmail@result-islamicleaderacademy.com" />
		<beans:property name="to" value="testmail@result-islamicleaderacademy.com" />
		<beans:property name="subject" value="Send Email using Spring and Java" />
		<beans:property name="text">
			<beans:value>
		<![CDATA[
%s

%s

Regards,
%s.
		]]>
			</beans:value>
		</beans:property>
	</beans:bean>
	<beans:bean id="tilesViewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass"
			value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<beans:property name="order" value="1" />
	</beans:bean>

	<beans:bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<beans:property name="basename" value="META-INF/messages/messages" />
	</beans:bean>

	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- max upload size in bytes -->
		<beans:property name="maxUploadSize" value="20971520" /> <!-- 20MB -->
		<!-- max size of file in memory (in bytes) -->
		<beans:property name="maxInMemorySize" value="1048576" /> <!-- 1MB -->

	</beans:bean>
	
	<!-- Mail sending must be queued. Here is the task executor -->
	<beans:bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<beans:property name="corePoolSize" value="5" />
		<beans:property name="maxPoolSize" value="25" />
		<beans:property name="queueCapacity" value="100" />
	</beans:bean>
	
	<task:annotation-driven executor="taskExecutor" />
</beans:beans>
